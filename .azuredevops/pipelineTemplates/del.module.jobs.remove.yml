#########################################################
## REMOVAL PIPELINE                                    ##
#########################################################
##
## This pipeline template contains the logic to remove resources that are indentified by a special remove-tag
## As such, the script is only capable to remove deployed resource-group level services
##
#################################################################
##
##---------------------------------------------##
## TEMPLATE PARAMETERS                         ##
##---------------------------------------------##
##
## By default it uses the variables specified in the below [parameters] section. However, you can overwrite these variables in the
##    referencing pipeline by providing the paramater explicitly.
##
## NOTE: If you don't need to overwrite a shared value, you can IGNORE this section
##
##   |========================================================================================================================================================================================================================|
##   | Parameter                       | Default Value                        | Description                                                                                               | Example                           |
##   |---------------------------------|--------------------------------------|-----------------------------------------------------------------------------------------------------------|-----------------------------------|
##   | displayName                     | 'Remove module'                      | Name for the pipeline job                                                                                 | 'Remove KeyVault'                 |
##   | serviceConnection               | '$(serviceConnection)'               | The service connection that connects to Azure                                                             | 'demo-internal'                   |
##   | poolName                        | '$(poolName)'                        | You can provide either a [poolname] or [vmImage] to run the job on                                        | 'Custom Deployment Pool'          |
##   | vmImage                         | '$(vmImage)'                         | You can provide either a [poolname] or [vmImage] to run the job on                                        | 'ubuntu20.04'                     |
##   | defaultJobTimeoutInMinutes      | 120                                  | The timeout for the job in this pipeline                                                                  | 120                               |
##   | moduleName                      | '$(moduleName)'                      | The name of the module to remove                                                                          | 'KeyVault'                        |
##   | resourceGroupName               | '$(defaultResourceGroupName)'        | The resourcegroup to remove the resource from                                                             | 'validation-rg'                   |
##   | modulePath                      | '$(modulePath)'                      | The path to the module to deploy. E.g. [c:/$(moduleName)]                                                 | 'c:/$(moduleName)'                |
##   | azurePowerShellVersion          | '$(azurePowerShellVersion)'          | Used for configuring the Azure PowerShellModules Version, one of the example values.                      | 'latestVersion' or 'OtherVersion' |
##   | preferredAzurePowerShellVersion | '$(preferredAzurePowerShellVersion)' | Used for configuring the Azure PowerShellModules Version, either an empty string or the specific version. | '4.4.0'                           |
##   |========================================================================================================================================================================================================================|
##
##---------------------------------------------##

parameters:
  # Pipeline-related parameters
  displayName: 'Remove module'
  serviceConnection: '$(serviceConnection)'
  poolName: '$(poolName)'
  vmImage: '$(vmImage)'
  defaultJobTimeoutInMinutes: 120
  # Logic-related parameters
  moduleName: '$(moduleName)'
  modulePath: '$(modulePath)'
  resourceGroupName: '$(defaultResourceGroupName)'
  relativePathOfRemovalScript: 'utilities/pipelines/resourceRemoval/Remove-DeployedModule.ps1'
  # Azure PowerShell Version parameter
  azurePowerShellVersion: '$(azurePowerShellVersion)'
  preferredAzurePowerShellVersion: '$(preferredAzurePowerShellVersion)'

##---------------------------------------------##
## TEMPLATE LOGIC                              ##
##---------------------------------------------##
jobs:
  - job:
    displayName: ${{ parameters.displayName }}
    timeoutInMinutes: ${{ parameters.defaultJobTimeoutInMinutes }}
    pool:
      ${{ if ne(parameters.vmImage, '') }}:
        vmImage: ${{ parameters.vmImage }}
      ${{ if ne(parameters.poolName, '') }}:
        name: ${{ parameters.poolName }}
    steps:
      - task: AzurePowerShell@5
        displayName: 'Remove [${{ parameters.moduleName }}] in [${{ parameters.resourceGroupName }}] via [${{ parameters.serviceConnection }}]'
        inputs:
          azureSubscription: ${{ parameters.serviceConnection }}
          azurePowerShellVersion: ${{ parameters.azurePowerShellVersion }}
          preferredAzurePowerShellVersion: ${{ parameters.preferredAzurePowerShellVersion }}
          ScriptType: InlineScript
          failOnStandardError: false
          pwsh: true
          inline: |
            # Load used function
            . (Join-Path '$(System.DefaultWorkingDirectory)' 'utilities' 'pipelines' 'resourceRemoval' 'Remove-DeployedModule.ps1')

            $functionInput = @{
                deploymentName    = '${{ steps.deploy_step.outputs.deploymentName }}' // TODO: UPDATE
                templateFilePath  = Join-Path '$(System.DefaultWorkingDirectory)' '${{ inputs.templateFilePath }}' // TODO: UPDATE
                resourceGroupName = '${{ parameters.resourceGroupName }}'
                verbose           = $true
            }

            Write-Verbose 'Invoke task with' -Verbose
            Write-Verbose ($functionInput | ConvertTo-Json | Out-String) -Verbose

            Remove-DeployedModule @functionInput
