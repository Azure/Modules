name: 'AnalysisServices: Servers'

on:
  workflow_dispatch:
    inputs:
      removeDeployment:
        type: boolean
        description: 'Remove deployed module'
        required: false
        default: true
      prerelease:
        type: boolean
        description: 'Publish prerelease module'
        required: false
        default: false
  push:
    branches:
      - main
    paths:
      - '.github/actions/templates/**'
      - '.github/workflows/ms.analysisservices.servers.yml'
      - 'arm/Microsoft.AnalysisServices/servers/**'
      - '!*/**/readme.md'
      - 'utilities/pipelines/**'
      - '!utilities/pipelines/dependencies/**'

env:
  variablesPath: 'global.variables.yml'
  modulePath: 'arm/Microsoft.AnalysisServices/servers'
  workflowPath: '.github/workflows/ms.analysisservices.servers.yml'
  customResourceGroupName: 'test-ms.analysisservices-servers-rg'
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  ARM_SUBSCRIPTION_ID: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
  ARM_MGMTGROUP_ID: '${{ secrets.ARM_MGMTGROUP_ID }}'
  ARM_TENANT_ID: '${{ secrets.ARM_TENANT_ID }}'
  DEPLOYMENT_SP_ID: '${{ secrets.DEPLOYMENT_SP_ID }}'

jobs:
  ############################
  #   PREPARE PIPELINE   #
  ############################
  job_prepare_pipeline:
    runs-on: ubuntu-20.04
    name: 'Prepare pipeline'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Set input parameters to output variables'
        id: get-workflow-param
        uses: ./.github/actions/templates/getWorkflowInput
        with:
          workflowPath: '${{ env.workflowPath}}'
      - name: 'Get parameter file paths'
        id: get-parameter-file-paths
        uses: ./.github/actions/templates/getParameterFiles
        with:
          modulePath: '${{ env.modulePath }}'
    outputs:
      removeDeployment: ${{ steps.get-workflow-param.outputs.removeDeployment }}
      parameterFilePaths: ${{ steps.get-parameter-file-paths.outputs.parameterFilePaths }}

  ####################
  #   Pester Tests   #
  ####################
  job_module_pester_validation:
    runs-on: ubuntu-20.04
    name: 'Pester tests'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Run tests'
        uses: ./.github/actions/templates/validateModulePester
        with:
          modulePath: '${{ env.modulePath }}'

  ######################
  #   Deployment tests #
  ######################

  #########################
  # Dependency deployment #
  job_dependencies_deploy_validation:
    runs-on: ubuntu-20.04
    name: 'Deploy dependencies'
    needs:
      - job_prepare_pipeline
      - job_module_pester_validation
    outputs:
      deploymentName: ${{ steps.deploy.outputs.deploymentName }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set environment variables
        uses: deep-mm/set-variables@v1.0
        with:
          variableFileName: 'global.variables'
      - name: 'Using template file [${{ env.modulePath }}/.dependencies/dependencies.bicep]'
        id: deploy
        uses: ./.github/actions/templates/deployTemplate
        with:
          templateFilePath: '${{ env.modulePath }}/.dependencies/dependencies.bicep'
          location: '${{ env.defaultLocation }}'
          resourceGroupName: '${{ env.customResourceGroupName }}'
          subscriptionId: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
          managementGroupId: '${{ secrets.ARM_MGMTGROUP_ID }}'

  ###################
  # Parameter tests #
  job_module_deploy_validation:
    runs-on: ubuntu-20.04
    name: 'Deployment tests'
    needs:
      - job_prepare_pipeline
      - job_dependencies_deploy_validation
      #- job_module_pester_validation # Dependency is implicit via dependency deployment
    strategy:
      fail-fast: false
      matrix:
        parameterFilePaths: ${{ fromJSON(needs.job_prepare_pipeline.outputs.parameterFilePaths) }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set environment variables
        uses: ./.github/actions/templates/setEnvironmentVariables
        with:
          variablesPath: ${{ env.variablesPath }}
      - name: 'Using parameter file [${{ matrix.parameterFilePaths }}]'
        id: deploy
        uses: ./.github/actions/templates/deployTemplate
        with:
          templateFilePath: '${{ env.modulePath }}/deploy.bicep'
          parameterFilePath: '${{ env.modulePath }}/${{ matrix.parameterFilePaths }}'
          location: '${{ env.defaultLocation }}'
          resourceGroupName: '${{ env.customResourceGroupName }}'
          subscriptionId: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
          managementGroupId: '${{ secrets.ARM_MGMTGROUP_ID }}'
      - name: 'Remove deployment for parameter file [${{ matrix.parameterFilePaths }}]'
        uses: ./.github/actions/templates/removeTemplateDeployment
        if: always() && needs.job_prepare_pipeline.outputs.removeDeployment == 'true' && steps.deploy.outputs.deploymentName != ''
        with:
          templateFilePath: '${{ env.modulePath }}/deploy.bicep'
          deploymentName: ${{ steps.deploy.outputs.deploymentName }}
          resourceGroupName: '${{ env.customResourceGroupName }}'
          subscriptionId: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
          managementGroupId: '${{ secrets.ARM_MGMTGROUP_ID }}'

  ######################
  # Dependency removal #
  job_dependencies_remove:
    runs-on: ubuntu-20.04
    name: 'Remove dependencies'
    if: always() && needs.job_prepare_pipeline.outputs.removeDeployment == 'true' && needs.job_dependencies_deploy_validation.outputs.deploymentName != ''
    needs:
      - job_prepare_pipeline
      - job_module_deploy_validation
      - job_dependencies_deploy_validation
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set environment variables
        uses: deep-mm/set-variables@v1.0
        with:
          variableFileName: 'global.variables'
      - name: 'Remove deployment for template file [${{ env.modulePath }}/.dependencies/dependencies.bicep]'
        uses: ./.github/actions/templates/removeTemplateDeployment
        with:
          templateFilePath: '${{ env.modulePath }}/.dependencies/dependencies.bicep'
          deploymentName: ${{ needs.job_dependencies_deploy_validation.outputs.deploymentName }}
          resourceGroupName: '${{ env.customResourceGroupName }}'
          subscriptionId: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
          managementGroupId: '${{ secrets.ARM_MGMTGROUP_ID }}'

  # ##############
  #   PUBLISH   #
  # ##############
  job_publish_module:
    name: 'Publish module'
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.event.inputs.prerelease == 'true'
    runs-on: ubuntu-20.04
    needs:
      # - job_prepare_pipeline # Dependency is implicit via module deployment
      - job_module_deploy_validation
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set environment variables
        uses: ./.github/actions/templates/setEnvironmentVariables
        with:
          variablesPath: ${{ env.variablesPath }}
      - name: 'Publish module'
        uses: ./.github/actions/templates/publishModule
        with:
          templateFilePath: '${{ env.modulePath }}/deploy.bicep'
          templateSpecsRGName: '${{ env.templateSpecsRGName }}'
          templateSpecsRGLocation: '${{ env.templateSpecsRGLocation }}'
          templateSpecsDescription: '${{ env.templateSpecsDescription }}'
          templateSpecsDoPublish: '${{ env.templateSpecsDoPublish }}'
          bicepRegistryName: '${{ env.bicepRegistryName }}'
          bicepRegistryRGName: '${{ env.bicepRegistryRGName }}'
          bicepRegistryRgLocation: '${{ env.bicepRegistryRgLocation }}'
          bicepRegistryDoPublish: '${{ env.bicepRegistryDoPublish }}'
