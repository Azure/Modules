name: '.Template: Module Pipeline'

on:
  workflow_call:
    inputs:
      modulePath:
        type: string
        description: 'Relative path to the module folder'
        required: true
      removeDeployment:
        type: string
        description: 'Remove deployed module'
        required: true
      versioningOption:
        type: string
        description: 'The mode to handle the version increments [major|minor|patch]'
        required: true
      customVersion:
        type: string
        description: 'Custom version to apply. Used only if higher than latest'
        required: true

env:
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  ARM_SUBSCRIPTION_ID: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
  ARM_MGMTGROUP_ID: '${{ secrets.ARM_MGMTGROUP_ID }}'
  ARM_TENANT_ID: '${{ secrets.ARM_TENANT_ID }}'
  DEPLOYMENT_SP_ID: '${{ secrets.DEPLOYMENT_SP_ID }}'

jobs:
  ####################
  #   Pester Tests   #
  ####################
  job_module_pester_validation:
    runs-on: ubuntu-20.04
    name: 'Pester tests'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Run tests'
        uses: ./.github/actions/templates/validateModulePester
        with:
          modulePath: '${{ inputs.modulePath }}'

  # ####################
  # # Deployment tests #
  # ####################
  # job_module_deploy_validation:
  #   runs-on: ubuntu-20.04
  #   name: 'Deployment tests'
  #   needs:
  #     - job_module_pester_validation
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       parameterFilePaths: ['parameters.json']
  #   steps:
  #     - name: 'Checkout'
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Set environment variables
  #       uses: deep-mm/set-variables@v1.0
  #       with:
  #         variableFileName: 'global.variables'
  #     - name: 'Using parameter file [${{ matrix.parameterFilePaths }}]'
  #       uses: ./.github/actions/templates/validateModuleDeployment
  #       with:
  #         templateFilePath: '${{ inputs.modulePath }}/deploy.bicep'
  #         parameterFilePath: '${{ inputs.modulePath }}/.parameters/${{ matrix.parameterFilePaths }}'
  #         location: '${{ env.defaultLocation }}'
  #         resourceGroupName: '${{ env.resourceGroupName }}'
  #         subscriptionId: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
  #         managementGroupId: '${{ secrets.ARM_MGMTGROUP_ID }}'
  #         removeDeployment: '${{ inputs.removeDeployment }}'

  # ###############
  # #   Publish   #
  # ###############
  # job_publish_module:
  #   name: 'Publish module'
  #   if: contains(fromJson('["refs/heads/main", "refs/heads/master"]'), github.ref)
  #   runs-on: ubuntu-20.04
  #   needs:
  #     - job_module_deploy_validation
  #   steps:
  #     - name: 'Checkout'
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - name: Set environment variables
  #       uses: deep-mm/set-variables@v1.0
  #       with:
  #         variableFileName: 'global.variables'
  #     - name: 'Publish module'
  #       uses: ./.github/actions/templates/publishModule
  #       with:
  #         templateFilePath: '${{ inputs.modulePath }}/deploy.bicep'
  #         versioningOption: '${{ inputs.versioningOption }}'
  #         customVersion: '${{ inputs.customVersion }}'
  #         templateSpecsRGName: '${{ env.templateSpecsRGName }}'
  #         templateSpecsRGLocation: '${{ env.templateSpecsRGLocation }}'
  #         templateSpecsDescription: '${{ env.templateSpecsDescription }}'
  #         templateSpecsDoPublish: '${{ env.templateSpecsDoPublish }}'
  #         bicepRegistryName: '${{ env.bicepRegistryName }}'
  #         bicepRegistryRGName: '${{ env.bicepRegistryRGName }}'
  #         bicepRegistryRgLocation: '${{ env.bicepRegistryRgLocation }}'
  #         bicepRegistryDoPublish: '${{ env.bicepRegistryDoPublish }}'
