name: "Storage Account - Test Pipeline"

on:
  workflow_dispatch:

inputs:
  isRemoveModule:
    description: 'Remove deplyoed module'
    required: false
    default: true

jobs:
  #############
  #   TESTS   #
  #############
  # Individual tests
  # ----------------
  job_tests_module_individual:
    runs-on: ubuntu-20.04
    name: "Run individual module tests"
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: "Test module"
      uses: ./.github/actions/templates/validateModuleIndividual
      with:
        modulePath: 'dummyFilePath'
        moduleName: 'dummyFilePath'

  # Global tests
  # ------------
  job_tests_module_global:
    runs-on: ubuntu-20.04
    name: "Run global module tests"
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: "Test module"
      uses: ./.github/actions/templates/validateModuleGeneral
      with:
        modulePath: 'dummyFilePath'
        moduleName: 'dummyFilePath'

  # Global API tests
  # ----------------
  job_tests_module_global_api:
    runs-on: ubuntu-20.04
    name: "Run global API module tests"
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: "Test module"
      uses: ./.github/actions/templates/validateModuleApis
      with:
        modulePath: 'dummyFilePath'
        moduleName: 'dummyFilePath'

  # Validate deployment module tests
  # --------------------------------
  job_tests_module_deploy_validate:
    runs-on: ubuntu-20.04
    name: "Run deployment validation module tests"
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    strategy:
      matrix:
        parameterFilePaths: ['noname.parameters.json','parameters.json']
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set environment variables
      uses: deep-mm/set-variables@v1.0
      with:
        # Name of variable file
        variableFileName: 'variables.module' # Don't write .json here

    - name: "Test module"
      uses: ./.github/actions/templates/validateModuleDeploy
      with:
        templateFilePath: 'arm/Microsoft.Storage/storageAccounts/deploy.json'
        parametersBasePath: 'arm/Microsoft.Storage/storageAccounts/parameters'
        parameterFilePath: ${{ matrix.parameterFilePaths }}
        modulePath: 'arm/Microsoft.Storage/storageAccounts'
        moduleName: 'storageAccounts'
        location: '${{ env.location }}'
        resourceGroupName: '${{ env.resourceGroupName }}'
        subscriptionId: '${{ env.subscriptionId }}'
        managementGroupId: '${{ env.managementGroupId }}'

  job_deploy:
    runs-on: ubuntu-20.04
    name: "Deploy module"
    needs:
    - job_tests_module_individual
    - job_tests_module_global
    - job_tests_module_global_api
    - job_tests_module_deploy_validate
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    strategy:
      matrix:
        parameterFilePaths: ['noname.parameters.json','parameters.json']
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set environment variables
      uses: deep-mm/set-variables@v1.0
      with:
        # Name of variable file
        variableFileName: 'variables.module' # Don't write .json here

    - name: "Deploy module"
      uses: ./.github/actions/templates/deploy
      with:
        templateFilePath: 'dummyFilePath'
        parameterFilePath: '${{ matrix.parameterFilePaths }}'

  job_publish:
    runs-on: ubuntu-20.04
    name: "Publish module"
    needs: job_deploy
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set environment variables
      uses: deep-mm/set-variables@v1.0
      with:
        # Name of variable file
        variableFileName: 'variables.module' # Don't write .json here

    - name: "Publish module"
      uses: ./.github/actions/templates/validate
      with:
        templateFilePath: 'dummyFilePath'
        parameterFilePath: 'dummyFilePath'

  job_remove:
    runs-on: ubuntu-20.04
    name: "Remove module"
    needs: job_deploy
    if: ${{ inputs.isRemoveModule == 'true' }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set environment variables
      uses: deep-mm/set-variables@v1.0
      with:
        # Name of variable file
        variableFileName: 'variables.module' # Don't write .json here

    - name: "Remove module"
      uses: ./.github/actions/templates/validate
      with:
        templateFilePath: 'dummyFilePath'
        parameterFilePath: 'dummyFilePath'