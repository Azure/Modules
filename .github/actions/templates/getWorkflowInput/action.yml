name: 'Get Workflow Input'
description: 'Get Workflow Input'

inputs:
  workflowPath:
    description: 'The path to the current workflow yaml file'
    required: true

runs:
  using: "composite"
  steps:
      - name: Set input parameters
        run: |
          # When running from workflow_dispatch event get input values
          if ('${{ github.event_name }}' -eq 'workflow_dispatch') {
            $removeDeployment='${{ github.event.inputs.removeDeployment }}'
            $versioningOption='${{ github.event.inputs.versioningOption }}'
            $customVersion='${{ github.event.inputs.customVersion }}'
          }
          # Otherwise retrieve default values
          else {
            $templateFile='${{ env.workflowPath }}'
            $content = Get-Content $templateFile
            $removeDeploymentRowIndex = ((0..($content.Count-1)) | Where-Object {$content[$_] -like '*removeDeployment:*'})[0]
            $removeDeployment = $content[$removeDeploymentRowIndex+3].trim().Split(':')[1].Trim().Replace("'","").Replace('"','')
            $removeDeployment
            $versioningOptionRowIndex = ((0..($content.Count-1)) | Where-Object {$content[$_] -like "*versioningOption:*" })[0]
            $versioningOption = $content[$versioningOptionRowIndex+3].trim().Split(':')[1].Trim().Replace("'","").Replace('"','')
            $versioningOption
            $customVersionRowIndex = ((0..($content.Count-1)) | Where-Object {$content[$_] -like "*customVersion:*" })[0]
            $customVersion = $content[$customVersionRowIndex+3].trim().Split(':')[1].Trim().Replace("'","").Replace('"','')
            $customVersion
          }
          # Output values to be accessed by next jobs
          echo "::set-output name=removeDeployment::$removeDeployment"
          echo "::set-output name=versioningOption::$versioningOption"
          echo "::set-output name=customVersion::$customVersion"
        id: get-trigger
        shell: pwsh