name: 'Get Workflow Input'
description: 'Get Workflow Input'

inputs:
  workflowPath:
    description: 'The path to the template file set for removal. Used to determine the type of resource.'
    required: true

outputs:
  # removeDeployment: ${{ steps.get-trigger.outputs.removeDeployment }}
  # removeDeployment: $removeDeployment
  removeDeployment: 
    description: removeDeployment
    value: ${{ steps.get-trigger-action.outputs.removeDeployment }}
  versioningOption: 
    description: versioningOption
    value: ${{ steps.get-trigger-action.outputs.versioningOption }}
  customVersion: 
    description: customVersion
    value: ${{ steps.get-trigger-action.outputs.customVersion }}

runs:
  using: "composite"
  steps:
    # - name: Set input parameters
    - id: get-trigger-action
      run: |
        # When running from workflow_dispatch event get input values
        if ('${{ github.event_name }}' -eq 'workflow_dispatch') {
          $removeDeployment='${{ github.event.inputs.removeDeployment }}'
          $versioningOption='${{ github.event.inputs.versioningOption }}'
          $customVersion='${{ github.event.inputs.customVersion }}'
        }
        # Otherwise retrieve default values
        else {
          $templateFile='${{ inputs.workflowPath }}'
          $content = Get-Content $templateFile
          $removeDeploymentRowIndex = ((0..($content.Count-1)) | Where-Object {$content[$_] -like '*removeDeployment:*'})[0]
          $removeDeployment = $content[$removeDeploymentRowIndex+3].trim().Split(':')[1].Trim().Replace("'","").Replace('"','')
          $removeDeployment
          $versioningOptionRowIndex = ((0..($content.Count-1)) | Where-Object {$content[$_] -like "*versioningOption:*" })[0]
          $versioningOption = $content[$versioningOptionRowIndex+3].trim().Split(':')[1].Trim().Replace("'","").Replace('"','')
          $versioningOption
          $customVersionRowIndex = ((0..($content.Count-1)) | Where-Object {$content[$_] -like "*customVersion:*" })[0]
          $customVersion = $content[$customVersionRowIndex+3].trim().Split(':')[1].Trim().Replace("'","").Replace('"','')
          $customVersion
        }
        # Output values to be accessed by next jobs
        echo "::set-output name=removeDeployment::$removeDeployment"
        echo "::set-output name=versioningOption::$versioningOption"
        echo "::set-output name=customVersion::$customVersion"
      shell: pwsh
        # outputs:
        #   removeDeployment: ${{ steps.get-trigger.outputs.removeDeployment }}
        #   versioningOption: ${{ steps.get-trigger.outputs.versioningOption }}
        #   customVersion: ${{ steps.get-trigger.outputs.customVersion }}
