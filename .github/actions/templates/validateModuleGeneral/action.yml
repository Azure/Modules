name: 'Execute general module tests'
description: 'Execute general module tests (if any)'

inputs:
  modulePath:
    description: 'The path to the module folder'
    required: true
  moduleName:
    description: 'The name of the module to process'
    required: true

runs:
  using: "composite"
  steps:
    - name: "Setup agent & login"
      shell: pwsh
      run: |
        # Load used functions
        . ".github/actions/sharedScripts/Set-AgentUp.ps1"

        $setupInputParameters = @{
          clientID       = $env:ARM_CLIENT_ID
          clientSecret   = ConvertTo-SecureString -String $env:ARM_CLIENT_SECRET -AsPlainText -Force
          tenantId       = $env:ARM_TENANT_ID
          subscriptionId = $env:ARM_SUBSCRIPTION_ID
        }
        Set-AgentUp @setupInputParameters

    # [Module Pester Test] task(s)
    #-----------------------------
    - name: "Run [${{ inputs.moduleName }}] tests via (Pester)"
      shell: pwsh
      run: |
        # --------------------- #
        # INVOKE PESTER TEST(S) #
        # --------------------- #
        Install-Module Pester -Force -ErrorAction Stop -RequiredVersion 5.3.0

        Invoke-Pester -Configuration @{
          Run        = @{
            Container = New-PesterContainer -Path 'arm/.global/global.module.tests.ps1' -Data @{
              moduleFolderPaths = "${{ inputs.modulePath }}"
            }
          }
          Filter     = @{
            ExcludeTag = 'ApiCheck'
          }
          TestResult = @{
            TestSuiteName = 'Global Module Tests'
            OutputPath    = 'arm/.global/global-testResults.xml'
            OutputFormat  = 'JUnitXml'
            Enabled       = $true
          }
          Output     = @{
            Verbosity = 'Detailed'
          }
        }

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      # if: always()
      with:
        files: arm/.global/global-testResults.xml

  # - task: PublishTestResults@2
  #   displayName: Publish Test Results
  #   inputs:
  #     testRunTitle: "Global Module Tests"
  #     testResultsFormat: NUnit
  #     testResultsFiles: global-testResults.xml
  #     failTaskOnFailedTests: false
  #     searchFolder: 'arm/.global'
  #   continueOnError: false
  #   condition: succeededOrFailed()