name: 'Remove module'
description: 'Remove module'

inputs:
  moduleName:
    description: 'The name of the module to remove'
    required: true
  templateFilePath:
    description: 'The path to the template file set for removal. Used to determine the type of resource.'
    required: true
  resourceGroupName:
    description: 'The resource group the module is deployed into'
    required: true

runs:
  using: "composite"
  steps:
    - name: "Checkout"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set environment variables
      uses: deep-mm/set-variables@v1.0
      with:
        # Name of variable file
        variableFileName: 'variables.module' # Don't write .json here
    - name: "Setup agent & login"
      shell: pwsh
      run: |
        # Load used functions
        . "$env:GITHUB_ACTION_PATH/scripts/Set-AgentUp.ps1"

        $functionInput = @{
          clientID       = $env:ARM_CLIENT_ID
          clientSecret   = ConvertTo-SecureString -String $env:ARM_CLIENT_SECRET -AsPlainText -Force
          tenantId       = $env:ARM_TENANT_ID
          subscriptionId = $env:ARM_SUBSCRIPTION_ID
        }
        Set-AgentUp @functionInput

    - name: "Remove module"
      shell: pwsh
      run: |
        # Load used functions
        . "$env:GITHUB_ACTION_PATH/scripts/Remove-DeployedModule.ps1"

        $functionInput = @{
          moduleName        = '${{ inputs.moduleName }}'
          resourceGroupName = '${{ inputs.resourceGroupName }}'
          templateFilePath  = '${{ inputs.templateFilePath }}'
        }

        Write-Verbose "Invoke task with" -Verbose
        $functionInput | Format-Table -AutoSize

        Remove-DeployedModule @functionInput -Verbose