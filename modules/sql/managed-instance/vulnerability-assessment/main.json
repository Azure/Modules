{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "7150309424065120762"
    },
    "name": "SQL Managed Instance Vulnerability Assessments",
    "description": "This module deploys a SQL Managed Instance Vulnerability Assessment.",
    "owner": "Azure/module-maintainers"
  },
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the vulnerability assessment."
      }
    },
    "managedInstanceName": {
      "type": "string",
      "metadata": {
        "description": "Conditional. The name of the parent SQL managed instance. Required if the template is used in a standalone deployment."
      }
    },
    "recurringScansIsEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Recurring scans state."
      }
    },
    "recurringScansEmailSubscriptionAdmins": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Specifies that the schedule scan notification will be is sent to the subscription administrators."
      }
    },
    "recurringScansEmails": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Specifies an array of email addresses to which the scan notification is sent."
      }
    },
    "storageAccountResourceId": {
      "type": "string",
      "metadata": {
        "description": "Required. A blob storage to hold the scan results."
      }
    },
    "storageAccountFirewallOrVnet": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Specifies that the storage account selected to store vulnerability assessment scan results is behind a firewall or in a virtual network."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    }
  },
  "variables": {
    "splitStorageAccountResourceId": "[split(parameters('storageAccountResourceId'), '/')]"
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Sql/managedInstances/vulnerabilityAssessments",
      "apiVersion": "2022-02-01-preview",
      "name": "[format('{0}/{1}', parameters('managedInstanceName'), parameters('name'))]",
      "properties": "[union(createObject('storageContainerPath', format('https://{0}.blob.{1}/vulnerability-assessment/', last(split(parameters('storageAccountResourceId'), '/')), environment().suffixes.storage), 'recurringScans', createObject('isEnabled', parameters('recurringScansIsEnabled'), 'emailSubscriptionAdmins', parameters('recurringScansEmailSubscriptionAdmins'), 'emails', parameters('recurringScansEmails'))), if(not(parameters('storageAccountFirewallOrVnet')), createObject('storageAccountAccessKey', listKeys(parameters('storageAccountResourceId'), '2019-06-01').keys[0].value), createObject()))]"
    },
    {
      "condition": "[parameters('storageAccountFirewallOrVnet')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[guid(resourceId('Microsoft.Sql/managedInstances', parameters('managedInstanceName')), parameters('managedInstanceName'), 'Storage Blob Data Contributor')]",
      "resourceGroup": "[variables('splitStorageAccountResourceId')[4]]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[last(variables('splitStorageAccountResourceId'))]"
          },
          "managedInstancePrincipalId": {
            "value": "[reference(resourceId('Microsoft.Sql/managedInstances', parameters('managedInstanceName')), '2022-02-01-preview', 'full').identity.principalId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "16559725465523549618"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the storage account to apply the role assignment to."
              }
            },
            "managedInstancePrincipalId": {
              "type": "string",
              "metadata": {
                "description": "Required. The principal ID of the SQL managed instance system assigned managed identity to assign the role to."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
              "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), parameters('managedInstancePrincipalId'), 'Storage Blob Data Contributor')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                "principalId": "[parameters('managedInstancePrincipalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "The name of the deployed vulnerability assessment."
      },
      "value": "[parameters('name')]"
    },
    "resourceId": {
      "type": "string",
      "metadata": {
        "description": "The resource ID of the deployed vulnerability assessment."
      },
      "value": "[resourceId('Microsoft.Sql/managedInstances/vulnerabilityAssessments', parameters('managedInstanceName'), parameters('name'))]"
    },
    "resourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The resource group of the deployed vulnerability assessment."
      },
      "value": "[resourceGroup().name]"
    }
  }
}