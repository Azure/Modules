{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "maxLength": 64,
      "metadata": {
        "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters for management group scope and subscription scope."
      }
    },
    "displayName": {
      "type": "string",
      "defaultValue": "",
      "maxLength": 128,
      "metadata": {
        "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
      }
    },
    "description": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The policy definition description."
      }
    },
    "mode": {
      "type": "string",
      "defaultValue": "All",
      "allowedValues": [
        "All",
        "Indexed",
        "Microsoft.KeyVault.Data",
        "Microsoft.ContainerService.Data",
        "Microsoft.Kubernetes.Data"
      ],
      "metadata": {
        "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
      }
    },
    "metadata": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
      }
    },
    "parameters": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The policy definition parameters that can be used in policy definition references."
      }
    },
    "policyRule": {
      "type": "object",
      "metadata": {
        "description": "Required. The Policy Rule details for the Policy Definition."
      }
    },
    "managementGroupId": {
      "type": "string",
      "defaultValue": "[managementGroup().name]",
      "metadata": {
        "description": "Optional. The group ID of the Management Group (Scope). If not provided, will use the current scope for deployment."
      }
    },
    "subscriptionId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The subscription ID of the subscription (Scope). Cannot be used with managementGroupId."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional. Location deployment metadata."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
      }
    }
  },
  "variables": {
    "enableReferencedModulesTelemetry": false
  },
  "resources": [
    {
      "condition": "[parameters('enableDefaultTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
      "location": "[parameters('location')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[empty(parameters('subscriptionId'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-PolicyDefinition-MG-Module', uniqueString(deployment().name, parameters('location')))]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('managementGroupId'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "managementGroupId": {
            "value": "[parameters('managementGroupId')]"
          },
          "mode": {
            "value": "[parameters('mode')]"
          },
          "displayName": {
            "value": "[if(not(empty(parameters('displayName'))), parameters('displayName'), '')]"
          },
          "description": {
            "value": "[if(not(empty(parameters('description'))), parameters('description'), '')]"
          },
          "metadata": {
            "value": "[if(not(empty(parameters('metadata'))), parameters('metadata'), createObject())]"
          },
          "parameters": {
            "value": "[if(not(empty(parameters('parameters'))), parameters('parameters'), createObject())]"
          },
          "policyRule": {
            "value": "[parameters('policyRule')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "maxLength": 128,
              "metadata": {
                "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The policy definition description."
              }
            },
            "mode": {
              "type": "string",
              "defaultValue": "All",
              "allowedValues": [
                "All",
                "Indexed",
                "Microsoft.KeyVault.Data",
                "Microsoft.ContainerService.Data",
                "Microsoft.Kubernetes.Data"
              ],
              "metadata": {
                "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "parameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy definition parameters that can be used in policy definition references."
              }
            },
            "policyRule": {
              "type": "object",
              "metadata": {
                "description": "Required. The Policy Rule details for the Policy Definition."
              }
            },
            "managementGroupId": {
              "type": "string",
              "defaultValue": "[managementGroup().name]",
              "metadata": {
                "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]",
              "metadata": {
                "description": "Optional. Location deployment metadata."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "location": "[parameters('location')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/policyDefinitions",
              "apiVersion": "2021-06-01",
              "name": "[parameters('name')]",
              "properties": {
                "policyType": "Custom",
                "mode": "[parameters('mode')]",
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                "policyRule": "[parameters('policyRule')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "Policy Definition Name."
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
              "metadata": {
                "description": "Policy Definition resource ID."
              }
            },
            "roleDefinitionIds": {
              "type": "array",
              "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
              "metadata": {
                "description": "Policy Definition Role Definition IDs."
              }
            }
          }
        }
      }
    },
    {
      "condition": "[not(empty(parameters('subscriptionId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-PolicyDefinition-Sub-Module', uniqueString(deployment().name, parameters('location')))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          },
          "mode": {
            "value": "[parameters('mode')]"
          },
          "displayName": {
            "value": "[if(not(empty(parameters('displayName'))), parameters('displayName'), '')]"
          },
          "description": {
            "value": "[if(not(empty(parameters('description'))), parameters('description'), '')]"
          },
          "metadata": {
            "value": "[if(not(empty(parameters('metadata'))), parameters('metadata'), createObject())]"
          },
          "parameters": {
            "value": "[if(not(empty(parameters('parameters'))), parameters('parameters'), createObject())]"
          },
          "policyRule": {
            "value": "[parameters('policyRule')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "enableDefaultTelemetry": {
            "value": "[variables('enableReferencedModulesTelemetry')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "maxLength": 128,
              "metadata": {
                "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The policy definition description."
              }
            },
            "mode": {
              "type": "string",
              "defaultValue": "All",
              "allowedValues": [
                "All",
                "Indexed",
                "Microsoft.KeyVault.Data",
                "Microsoft.ContainerService.Data",
                "Microsoft.Kubernetes.Data"
              ],
              "metadata": {
                "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "parameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy definition parameters that can be used in policy definition references."
              }
            },
            "policyRule": {
              "type": "object",
              "metadata": {
                "description": "Required. The Policy Rule details for the Policy Definition."
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Optional. The subscription ID of the subscription."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]",
              "metadata": {
                "description": "Optional. Location deployment metadata."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "location": "[parameters('location')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/policyDefinitions",
              "apiVersion": "2021-06-01",
              "name": "[parameters('name')]",
              "properties": {
                "policyType": "Custom",
                "mode": "[parameters('mode')]",
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                "policyRule": "[parameters('policyRule')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "Policy Definition Name."
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]",
              "metadata": {
                "description": "Policy Definition resource ID."
              }
            },
            "roleDefinitionIds": {
              "type": "array",
              "value": "[if(contains(reference(subscriptionResourceId('Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then, 'details'), if(contains(reference(subscriptionResourceId('Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details, 'roleDefinitionIds'), reference(subscriptionResourceId('Microsoft.Authorization/policyDefinitions', parameters('name'))).policyRule.then.details.roleDefinitionIds, createArray()), createArray())]",
              "metadata": {
                "description": "Policy Definition Role Definition IDs."
              }
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "value": "[if(empty(parameters('subscriptionId')), reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Resources/deployments', format('{0}-PolicyDefinition-MG-Module', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.name.value, reference(subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('{0}-PolicyDefinition-Sub-Module', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.name.value)]",
      "metadata": {
        "description": "Policy Definition Name."
      }
    },
    "resourceId": {
      "type": "string",
      "value": "[if(empty(parameters('subscriptionId')), reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Resources/deployments', format('{0}-PolicyDefinition-MG-Module', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.resourceId.value, reference(subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('{0}-PolicyDefinition-Sub-Module', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.resourceId.value)]",
      "metadata": {
        "description": "Policy Definition resource ID."
      }
    },
    "roleDefinitionIds": {
      "type": "array",
      "value": "[if(empty(parameters('subscriptionId')), reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Resources/deployments', format('{0}-PolicyDefinition-MG-Module', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.roleDefinitionIds.value, reference(subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('{0}-PolicyDefinition-Sub-Module', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.roleDefinitionIds.value)]",
      "metadata": {
        "description": "Policy Definition Role Definition IDs."
      }
    }
  }
}
