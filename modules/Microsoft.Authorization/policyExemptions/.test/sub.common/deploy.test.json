{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional. The location to deploy resources to."
      }
    },
    "serviceShort": {
      "type": "string",
      "defaultValue": "apesubcom",
      "metadata": {
        "description": "Optional. A short identifier for the kind of deployment. Should be kept short to not run into resource-name length-constraints."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/policyDefinitions",
      "apiVersion": "2021-06-01",
      "name": "[format('dep-<<namePrefix>>-polDef-AuditKvlt-{0}', parameters('serviceShort'))]",
      "properties": {
        "policyRule": {
          "if": {
            "allOf": [
              {
                "equals": "Microsoft.KeyVault/vaults",
                "field": "type"
              }
            ]
          },
          "then": {
            "effect": "[[parameters('effect')]"
          }
        },
        "parameters": {
          "effect": {
            "allowedValues": [
              "Audit"
            ],
            "defaultValue": "Audit",
            "type": "String"
          }
        }
      }
    },
    {
      "type": "Microsoft.Authorization/policySetDefinitions",
      "apiVersion": "2021-06-01",
      "name": "[format('dep-<<namePrefix>>-polSet-{0}', parameters('serviceShort'))]",
      "properties": {
        "policyDefinitions": [
          {
            "parameters": {
              "effect": {
                "value": "Audit"
              }
            },
            "policyDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/policyDefinitions', format('dep-<<namePrefix>>-polDef-AuditKvlt-{0}', parameters('serviceShort')))]",
            "policyDefinitionReferenceId": "[format('dep-<<namePrefix>>-polDef-AuditKvlt-{0}', parameters('serviceShort'))]"
          }
        ]
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/policyDefinitions', format('dep-<<namePrefix>>-polDef-AuditKvlt-{0}', parameters('serviceShort')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2021-06-01",
      "name": "[format('dep-<<namePrefix>>-psa-{0}', parameters('serviceShort'))]",
      "location": "[parameters('location')]",
      "properties": {
        "displayName": "Test case assignment",
        "policyDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/policySetDefinitions', format('dep-<<namePrefix>>-polSet-{0}', parameters('serviceShort')))]"
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/policySetDefinitions', format('dep-<<namePrefix>>-polSet-{0}', parameters('serviceShort')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-test-{1}', uniqueString(deployment().name), parameters('serviceShort'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('<<namePrefix>>{0}001', parameters('serviceShort'))]"
          },
          "policyAssignmentId": {
            "value": "[subscriptionResourceId('Microsoft.Authorization/policyAssignments', format('dep-<<namePrefix>>-psa-{0}', parameters('serviceShort')))]"
          },
          "displayName": {
            "value": "[Display Name] policy exempt (subscription scope)"
          },
          "exemptionCategory": {
            "value": "Waiver"
          },
          "expiresOn": {
            "value": "2025-10-02T03:57:00Z"
          },
          "metadata": {
            "value": {
              "category": "Security"
            }
          },
          "subscriptionId": {
            "value": "[subscription().subscriptionId]"
          },
          "assignmentScopeValidation": {
            "value": "Default"
          },
          "description": {
            "value": "My description"
          },
          "resourceSelectors": {
            "value": [
              {
                "name": "TemporaryMitigation",
                "selectors": [
                  {
                    "kind": "resourceLocation",
                    "in": [
                      "westcentralus"
                    ]
                  }
                ]
              }
            ]
          },
          "policyDefinitionReferenceIds": {
            "value": [
              "[reference(subscriptionResourceId('Microsoft.Authorization/policySetDefinitions', format('dep-<<namePrefix>>-polSet-{0}', parameters('serviceShort'))), '2021-06-01').policyDefinitions[0].policyDefinitionReferenceId]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy exemption. Maximum length is 64 characters for subscription scope."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "maxLength": 128,
              "metadata": {
                "description": "Optional. The display name of the policy exemption. Maximum length is 128 characters."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of the policy exemption."
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy exemption metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "exemptionCategory": {
              "type": "string",
              "defaultValue": "Mitigated",
              "allowedValues": [
                "Mitigated",
                "Waiver"
              ],
              "metadata": {
                "description": "Optional. The policy exemption category. Possible values are Waiver and Mitigated. Default is Mitigated."
              }
            },
            "policyAssignmentId": {
              "type": "string",
              "metadata": {
                "description": "Required. The resource ID of the policy assignment that is being exempted."
              }
            },
            "policyDefinitionReferenceIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition."
              }
            },
            "expiresOn": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The expiration date and time (in UTC ISO 8601 format yyyy-MM-ddTHH:mm:ssZ) of the policy exemption. e.g. 2021-10-02T03:57:00.000Z."
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Optional. The subscription ID of the subscription to be exempted from the policy assignment. If not provided, will use the current scope for deployment."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]",
              "metadata": {
                "description": "Optional. Location deployment metadata."
              }
            },
            "assignmentScopeValidation": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "",
                "Default",
                "DoNotValidate"
              ],
              "metadata": {
                "description": "Optional. The option whether validate the exemption is at or under the assignment scope."
              }
            },
            "resourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The resource selector list to filter policies by resource properties."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "location": "[parameters('location')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/policyExemptions",
              "apiVersion": "2022-07-01-preview",
              "name": "[parameters('name')]",
              "properties": {
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "exemptionCategory": "[parameters('exemptionCategory')]",
                "policyAssignmentId": "[parameters('policyAssignmentId')]",
                "policyDefinitionReferenceIds": "[if(not(empty(parameters('policyDefinitionReferenceIds'))), parameters('policyDefinitionReferenceIds'), createArray())]",
                "expiresOn": "[if(not(empty(parameters('expiresOn'))), parameters('expiresOn'), null())]",
                "assignmentScopeValidation": "[if(not(empty(parameters('assignmentScopeValidation'))), parameters('assignmentScopeValidation'), null())]",
                "resourceSelectors": "[parameters('resourceSelectors')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "Policy Exemption Name."
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Authorization/policyExemptions', parameters('name'))]",
              "metadata": {
                "description": "Policy Exemption resource ID."
              }
            },
            "scope": {
              "type": "string",
              "value": "[subscription().id]",
              "metadata": {
                "description": "Policy Exemption Scope."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Authorization/policySetDefinitions', format('dep-<<namePrefix>>-polSet-{0}', parameters('serviceShort')))]",
        "[subscriptionResourceId('Microsoft.Authorization/policyAssignments', format('dep-<<namePrefix>>-psa-{0}', parameters('serviceShort')))]"
      ]
    }
  ]
}
