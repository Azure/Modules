{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[format('ms.authorization.policyassignments-{0}-rg', parameters('serviceShort'))]",
      "maxLength": 80,
      "metadata": {
        "description": "Optional. The name of the resource group to deploy for testing purposes."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional. The location to deploy resources to."
      }
    },
    "serviceShort": {
      "type": "string",
      "defaultValue": "apargmin",
      "metadata": {
        "description": "Optional. A short identifier for the kind of deployment. Should be kept short to not run into resource-name length-constraints."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-test-{1}', uniqueString(deployment().name), parameters('serviceShort'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[format('<<namePrefix>>{0}001', parameters('serviceShort'))]"
          },
          "policyDefinitionId": {
            "value": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d"
          },
          "subscriptionId": {
            "value": "[subscription().subscriptionId]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy assignment. Maximum length is 64 characters for resource group scope."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. This message will be part of response in case of policy violation."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "maxLength": 128,
              "metadata": {
                "description": "Optional. The display name of the policy assignment. Maximum length is 128 characters."
              }
            },
            "policyDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Required. Specifies the ID of the policy definition or policy set definition being assigned."
              }
            },
            "parameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Parameters for the policy assignment if needed."
              }
            },
            "identity": {
              "type": "string",
              "defaultValue": "SystemAssigned",
              "allowedValues": [
                "SystemAssigned",
                "UserAssigned",
                "None"
              ],
              "metadata": {
                "description": "Optional. The managed identity associated with the policy assignment. Policy assignments must include a resource identity when assigning 'Modify' policy definitions."
              }
            },
            "userAssignedIdentityId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The Resource ID for the user assigned identity to assign to the policy assignment."
              }
            },
            "roleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The IDs Of the Azure Role Definition list that is used to assign permissions to the identity. You need to provide either the fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'.. See https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles for the list IDs for built-in Roles. They must match on what is on the policy definition."
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy assignment metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "nonComplianceMessages": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The messages that describe why a resource is non-compliant with the policy."
              }
            },
            "enforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Optional. The policy assignment enforcement mode. Possible values are Default and DoNotEnforce. - Default or DoNotEnforce."
              }
            },
            "notScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The policy excluded scopes."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Optional. The Target Scope for the Policy. The subscription ID of the subscription for the policy assignment. If not provided, will use the current scope for deployment."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Optional. The Target Scope for the Policy. The name of the resource group for the policy assignment. If not provided, will use the current scope for deployment."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            }
          },
          "variables": {
            "identityVar": "[if(equals(parameters('identity'), 'SystemAssigned'), createObject('type', parameters('identity')), if(equals(parameters('identity'), 'UserAssigned'), createObject('type', parameters('identity'), 'userAssignedIdentities', createObject(format('{0}', parameters('userAssignedIdentityId')), createObject())), null()))]"
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2021-06-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "properties": {
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "policyDefinitionId": "[parameters('policyDefinitionId')]",
                "parameters": "[parameters('parameters')]",
                "nonComplianceMessages": "[if(not(empty(parameters('nonComplianceMessages'))), parameters('nonComplianceMessages'), createArray())]",
                "enforcementMode": "[parameters('enforcementMode')]",
                "notScopes": "[if(not(empty(parameters('notScopes'))), parameters('notScopes'), createArray())]"
              },
              "identity": "[variables('identityVar')]"
            },
            {
              "condition": "[and(not(empty(parameters('roleDefinitionIds'))), equals(parameters('identity'), 'SystemAssigned'))]",
              "copy": {
                "name": "roleAssignment",
                "count": "[length(parameters('roleDefinitionIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('subscriptionId'), parameters('resourceGroupName'), parameters('roleDefinitionIds')[copyIndex()], parameters('location'), parameters('name'))]",
              "properties": {
                "roleDefinitionId": "[parameters('roleDefinitionIds')[copyIndex()]]",
                "principalId": "[reference(resourceId('Microsoft.Authorization/policyAssignments', parameters('name')), '2021-06-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Authorization/policyAssignments', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "Policy Assignment Name."
              }
            },
            "principalId": {
              "type": "string",
              "value": "[if(equals(parameters('identity'), 'SystemAssigned'), reference(resourceId('Microsoft.Authorization/policyAssignments', parameters('name')), '2021-06-01', 'full').identity.principalId, '')]",
              "metadata": {
                "description": "Policy Assignment principal ID."
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId(parameters('subscriptionId'), parameters('resourceGroupName'), 'Microsoft.Authorization/policyAssignments', parameters('name'))]",
              "metadata": {
                "description": "Policy Assignment resource ID."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The name of the resource group the policy was assigned to."
              }
            },
            "location": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Authorization/policyAssignments', parameters('name')), '2021-06-01', 'full').location]",
              "metadata": {
                "description": "The location the resource was deployed into."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    }
  ]
}
