{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.12.40.16777",
      "templateHash": "8577036822908524262"
    }
  },
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[format('ms.authorization.roledefinitions-{0}-rg', parameters('serviceShort'))]",
      "maxLength": 90,
      "metadata": {
        "description": "Optional. The name of the resource group to deploy for testing purposes."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional. The location to deploy resources to."
      }
    },
    "serviceShort": {
      "type": "string",
      "defaultValue": "ardrgcom",
      "metadata": {
        "description": "Optional. A short identifier for the kind of deployment. Should be kept short to not run into resource-name length-constraints."
      }
    },
    "enableDefaultTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-test-{1}', uniqueString(deployment().name), parameters('serviceShort'))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "enableDefaultTelemetry": {
            "value": "[parameters('enableDefaultTelemetry')]"
          },
          "roleName": {
            "value": "[format('<<namePrefix>>-testRole-{0}', parameters('serviceShort'))]"
          },
          "actions": {
            "value": [
              "Microsoft.Compute/galleries/*",
              "Microsoft.Network/virtualNetworks/read"
            ]
          },
          "assignableScopes": {
            "value": [
              "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
            ]
          },
          "dataActions": {
            "value": [
              "Microsoft.Storage/storageAccounts/blobServices/*/read"
            ]
          },
          "description": {
            "value": "Test Custom Role Definition Standard (resource group scope)"
          },
          "notActions": {
            "value": [
              "Microsoft.Compute/images/delete",
              "Microsoft.Compute/images/write",
              "Microsoft.Network/virtualNetworks/subnets/join/action"
            ]
          },
          "notDataActions": {
            "value": [
              "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.12.40.16777",
              "templateHash": "10297454676349277458"
            }
          },
          "parameters": {
            "roleName": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the custom RBAC role to be created."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Description of the custom RBAC role to be created."
              }
            },
            "actions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of allowed actions."
              }
            },
            "notActions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of denied actions."
              }
            },
            "dataActions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of allowed data actions. This is not supported if the assignableScopes contains Management Group Scopes."
              }
            },
            "notDataActions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of denied data actions. This is not supported if the assignableScopes contains Management Group Scopes."
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Optional. The subscription ID where the Role Definition and Target Scope will be applied to. If not provided, will use the current scope for deployment."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Optional. The name of the Resource Group where the Role Definition and Target Scope will be applied to. If not provided, will use the current scope for deployment."
              }
            },
            "assignableScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Role definition assignable scopes. If not provided, will use the current scope provided."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via a Globally Unique Identifier (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleDefinitions",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('roleName'), parameters('subscriptionId'), parameters('resourceGroupName'))]",
              "properties": {
                "roleName": "[parameters('roleName')]",
                "description": "[parameters('description')]",
                "type": "customRole",
                "permissions": [
                  {
                    "actions": "[parameters('actions')]",
                    "notActions": "[parameters('notActions')]",
                    "dataActions": "[parameters('dataActions')]",
                    "notDataActions": "[parameters('notDataActions')]"
                  }
                ],
                "assignableScopes": "[if(equals(parameters('assignableScopes'), createArray()), array(resourceGroup().id), parameters('assignableScopes'))]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[guid(parameters('roleName'), parameters('subscriptionId'), parameters('resourceGroupName'))]",
              "metadata": {
                "description": "The GUID of the Role Definition."
              }
            },
            "scope": {
              "type": "string",
              "value": "[resourceGroup().id]",
              "metadata": {
                "description": "The scope this Role Definition applies to."
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Authorization/roleDefinitions', guid(parameters('roleName'), parameters('subscriptionId'), parameters('resourceGroupName')))]",
              "metadata": {
                "description": "The resource ID of the Role Definition."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The name of the resource group the role definition was created at."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    }
  ]
}
