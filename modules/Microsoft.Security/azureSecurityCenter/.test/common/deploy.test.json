{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[format('ms.security.azureSecurityCenter-{0}-rg', parameters('serviceShort'))]",
      "maxLength": 90,
      "metadata": {
        "description": "Optional. The name of the resource group to deploy for testing purposes."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional. The location to deploy resources to."
      }
    },
    "serviceShort": {
      "type": "string",
      "defaultValue": "sasccom",
      "metadata": {
        "description": "Optional. A short identifier for the kind of deployment. Should be kept short to not run into resource-name length-constraints."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-paramNested', uniqueString(deployment().name, parameters('location')))]",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "logAnalyticsWorkspaceName": {
            "value": "[format('dep-<<namePrefix>>-law-{0}', parameters('serviceShort'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. The location to deploy to."
              }
            },
            "logAnalyticsWorkspaceName": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the Log Analytics Workspace to create."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('logAnalyticsWorkspaceName')]",
              "location": "[parameters('location')]"
            }
          ],
          "outputs": {
            "logAnalyticsWorkspaceResourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
              "metadata": {
                "description": "The resource ID of the created Log Analytics Workspace."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-test-{1}', uniqueString(deployment().name), parameters('serviceShort'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "scope": {
            "value": "[format('/subscriptions/{0}', subscription().subscriptionId)]"
          },
          "workspaceId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-paramNested', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.logAnalyticsWorkspaceResourceId.value]"
          },
          "securityContactProperties": {
            "value": {
              "alertNotifications": "Off",
              "alertsToAdmins": "Off",
              "email": "foo@contoso.com",
              "phone": "+12345678"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "workspaceId": {
              "type": "string",
              "metadata": {
                "description": "Required. The full Azure ID of the workspace to save the data in."
              }
            },
            "scope": {
              "type": "string",
              "metadata": {
                "description": "Required. All the VMs in this scope will send their security data to the mentioned workspace unless overridden by a setting with more specific scope."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            },
            "autoProvision": {
              "type": "string",
              "defaultValue": "On",
              "allowedValues": [
                "On",
                "Off"
              ],
              "metadata": {
                "description": "Optional. Describes what kind of security agent provisioning action to take. - On or Off."
              }
            },
            "deviceSecurityGroupProperties": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Device Security group data."
              }
            },
            "ioTSecuritySolutionProperties": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Security Solution data."
              }
            },
            "virtualMachinesPricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for VMs. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "sqlServersPricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for SqlServers. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "appServicesPricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for AppServices. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "storageAccountsPricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for StorageAccounts. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "sqlServerVirtualMachinesPricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for SqlServerVirtualMachines. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "kubernetesServicePricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for KubernetesService. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "containerRegistryPricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for ContainerRegistry. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "keyVaultsPricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for KeyVaults. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "dnsPricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for DNS. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "armPricingTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for ARM. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "openSourceRelationalDatabasesTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for OpenSourceRelationalDatabases. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "containersTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for containers. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "cosmosDbsTier": {
              "type": "string",
              "defaultValue": "Free",
              "allowedValues": [
                "Free",
                "Standard"
              ],
              "metadata": {
                "description": "Optional. The pricing tier value for CosmosDbs. Azure Security Center is provided in two pricing tiers: free and standard, with the standard tier available with a trial period. The standard tier offers advanced security capabilities, while the free tier offers basic security features. - Free or Standard."
              }
            },
            "securityContactProperties": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Security contact data."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]",
              "metadata": {
                "description": "Optional. Location deployment metadata."
              }
            }
          },
          "variables": {
            "pricings": [
              {
                "name": "VirtualMachines",
                "pricingTier": "[parameters('virtualMachinesPricingTier')]"
              },
              {
                "name": "SqlServers",
                "pricingTier": "[parameters('sqlServersPricingTier')]"
              },
              {
                "name": "AppServices",
                "pricingTier": "[parameters('appServicesPricingTier')]"
              },
              {
                "name": "StorageAccounts",
                "pricingTier": "[parameters('storageAccountsPricingTier')]"
              },
              {
                "name": "SqlServerVirtualMachines",
                "pricingTier": "[parameters('sqlServerVirtualMachinesPricingTier')]"
              },
              {
                "name": "KubernetesService",
                "pricingTier": "[parameters('kubernetesServicePricingTier')]"
              },
              {
                "name": "ContainerRegistry",
                "pricingTier": "[parameters('containerRegistryPricingTier')]"
              },
              {
                "name": "KeyVaults",
                "pricingTier": "[parameters('keyVaultsPricingTier')]"
              },
              {
                "name": "Dns",
                "pricingTier": "[parameters('dnsPricingTier')]"
              },
              {
                "name": "Arm",
                "pricingTier": "[parameters('armPricingTier')]"
              },
              {
                "name": "OpenSourceRelationalDatabases",
                "pricingTier": "[parameters('openSourceRelationalDatabasesTier')]"
              },
              {
                "name": "Containers",
                "pricingTier": "[parameters('containersTier')]"
              },
              {
                "name": "CosmosDbs",
                "pricingTier": "[parameters('cosmosDbsTier')]"
              }
            ]
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "location": "[parameters('location')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "copy": {
                "name": "pricingTiers",
                "count": "[length(variables('pricings'))]"
              },
              "type": "Microsoft.Security/pricings",
              "apiVersion": "2018-06-01",
              "name": "[variables('pricings')[copyIndex()].name]",
              "properties": {
                "pricingTier": "[variables('pricings')[copyIndex()].pricingTier]"
              }
            },
            {
              "type": "Microsoft.Security/autoProvisioningSettings",
              "apiVersion": "2017-08-01-preview",
              "name": "default",
              "properties": {
                "autoProvision": "[parameters('autoProvision')]"
              }
            },
            {
              "condition": "[not(empty(parameters('deviceSecurityGroupProperties')))]",
              "type": "Microsoft.Security/deviceSecurityGroups",
              "apiVersion": "2019-08-01",
              "name": "deviceSecurityGroups",
              "properties": {
                "thresholdRules": "[parameters('deviceSecurityGroupProperties').thresholdRules]",
                "timeWindowRules": "[parameters('deviceSecurityGroupProperties').timeWindowRules]",
                "allowlistRules": "[parameters('deviceSecurityGroupProperties').allowlistRules]",
                "denylistRules": "[parameters('deviceSecurityGroupProperties').denylistRules]"
              }
            },
            {
              "condition": "[not(empty(parameters('securityContactProperties')))]",
              "type": "Microsoft.Security/securityContacts",
              "apiVersion": "2017-08-01-preview",
              "name": "default",
              "properties": {
                "email": "[parameters('securityContactProperties').email]",
                "phone": "[parameters('securityContactProperties').phone]",
                "alertNotifications": "[parameters('securityContactProperties').alertNotifications]",
                "alertsToAdmins": "[parameters('securityContactProperties').alertsToAdmins]"
              }
            },
            {
              "type": "Microsoft.Security/workspaceSettings",
              "apiVersion": "2017-08-01-preview",
              "name": "default",
              "properties": {
                "workspaceId": "[parameters('workspaceId')]",
                "scope": "[parameters('scope')]"
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Security/autoProvisioningSettings', 'default')]"
              ]
            },
            {
              "condition": "[not(empty(parameters('ioTSecuritySolutionProperties')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-ASC-IotSecuritySolutions', uniqueString(deployment().name))]",
              "resourceGroup": "[if(empty(parameters('ioTSecuritySolutionProperties')), 'dummy', parameters('ioTSecuritySolutionProperties').resourceGroup)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ioTSecuritySolutionProperties": {
                    "value": "[parameters('ioTSecuritySolutionProperties')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "ioTSecuritySolutionProperties": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Security Solution data."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(empty(parameters('ioTSecuritySolutionProperties')))]",
                      "type": "Microsoft.Security/iotSecuritySolutions",
                      "apiVersion": "2019-08-01",
                      "name": "iotSecuritySolutions",
                      "properties": {
                        "workspace": "[parameters('ioTSecuritySolutionProperties').workspace]",
                        "displayName": "[parameters('ioTSecuritySolutionProperties').displayName]",
                        "status": "[parameters('ioTSecuritySolutionProperties').status]",
                        "export": "[parameters('ioTSecuritySolutionProperties').export]",
                        "disabledDataSources": "[parameters('ioTSecuritySolutionProperties').disabledDataSources]",
                        "iotHubs": "[parameters('ioTSecuritySolutionProperties').iotHubs]",
                        "userDefinedResources": "[parameters('ioTSecuritySolutionProperties').userDefinedResources]",
                        "recommendationsConfiguration": "[parameters('ioTSecuritySolutionProperties').recommendationsConfiguration]"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "outputs": {
            "workspaceId": {
              "type": "string",
              "value": "[parameters('workspaceId')]",
              "metadata": {
                "description": "The resource ID of the used log analytics workspace."
              }
            },
            "name": {
              "type": "string",
              "value": "Security",
              "metadata": {
                "description": "The name of the security center."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resourceGroupName')), 'Microsoft.Resources/deployments', format('{0}-paramNested', uniqueString(deployment().name, parameters('location'))))]"
      ]
    }
  ]
}
