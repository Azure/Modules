{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceFabricClusterName": {
            "value": "sxx-az-sfc-weu-x-001"
        },
        "location": {
            "value": "centralIndia"
        },
        "tags": {
            "value": {
                "costCenter": "1234",
                "environment": "prod",
                "contactinfo": "someone@company.com"
            }
        },
        "lockForDeletion": {
            "value": false
        },
        "addOnFeatures": {
            "value": []
        },
        "maxUnusedVersionsToKeep": {
            "value": 2 // Mandatory
        },
        "azureActiveDirectory": {
            "value": {
                "clientApplication": "",
                "clusterApplication": "",
                "tenantId": ""
            }
        },
        "certificate": {
            "value": {
                "thumbprint": "", // If 'certificate' is provided then this is mandatory
                "thumbprintSecondary": "",
                "x509StoreName": "" // Possible values are 'AddressBook', 'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root', 'TrustedPeople', 'TrustedPublisher'
            }
        },
        "certificateCommonNames": {
            "value": {
                "commonNames": [ // The list of server certificates referenced by common name that are used to secure the cluster.
                    {
                        "certificateCommonName": "", // If 'certificateCommonNames' is provided then this is mandatory
                        "certificateIssuerThumbprint": "" // If 'certificateCommonNames' is provided then this is mandatory
                    }
                ],
                "x509StoreName": "" // Possible values are 'AddressBook', 'AuthRoot', 'CertificateAuthority', 'Disallowed', 'My', 'Root', 'TrustedPeople', 'TrustedPublisher'
            }
        },
        "clientCertificateCommonNames": {
            "value": [{
                "certificateCommonName": "", // If 'clientCertificateCommonNames' is passed then this is mandatory
                "certificateIssuerThumbprint": "", // If 'clientCertificateCommonNames' is passed then this is mandatory
                "isAdmin": "" // Bool. If 'clientCertificateCommonNames' is passed then this is mandatory
            }]
        },
        "clientCertificateThumbprints": {
            "value": [{
                "certificateThumbprint": "", // If 'clientCertificateThumbprints' is passed then this is mandatory
                "isAdmin": "" // If 'clientCertificateThumbprints' is passed then this is mandatory
            }]
        },
        "diagnosticsStorageAccountConfig": {
            "value": {
                "blobEndpoint": "", // If 'diagnosticsStorageAccountConfig' is passed then this is mandatory
                "protectedAccountKeyName": "", // If 'diagnosticsStorageAccountConfig' is passed then this is mandatory
                "protectedAccountKeyName2": "",
                "queueEndpoint": "", // If 'diagnosticsStorageAccountConfig' is passed then this is mandatory
                "storageAccountName": "", // If 'diagnosticsStorageAccountConfig' is passed then this is mandatory
                "tableEndpoint": "" // If 'diagnosticsStorageAccountConfig' is passed then this is mandatory
            }
        },
        "fabricSettings": {
            "value": [{
                "name": "", // The section name of the fabric settings.
                "parameters": [{ // The collection of parameters in the section.
                    "name": "",
                    "value": ""
                }]
            }]
        },
        "managementEndpoint": {
            "value": "" // Mandatory
        },
        "nodeTypes": { // The list of node types in the cluster.
            "value": [{
                "applicationPorts": {
                    "endPort": "",
                    "startPort": ""
                },
                "capacities": {},
                "clientConnectionEndpointPort": "",
                "durabilityLevel": "", // One of 'Bronze', 'Gold', 'Silver'
                "ephemeralPorts": {
                    "endPort": "",
                    "startPort": ""
                },
                "httpGatewayEndpointPort": "",
                "isPrimary": "",
                "isStateless": "",
                "multipleAvailabilityZones": "",
                "name": "",
                "placementProperties": {},
                "reverseProxyEndpointPort": "",
                "vmInstanceCount": ""
            }]
        },
        "notifications": {
            "value": [{
                "isEnabled": "",
                "notificationCategory": "", // 'WaveProgress'
                "notificationLevel": "", // One of 'All', 'Critical'
                "notificationTargets": [{
                    "notificationChannel": "", // One of 'EmailSubscription', 'EmailUser'
                    "receivers": ""
                }]
            }]
        },
        "serviceFabricClusterApplications": {
            "value": [{
                "name": "",
                "identity": {
                    "type": "",
                    "userAssignedIdentities": {}
                },
                "managedIdentities": [{
                    "name": "",
                    "principalId": ""
                }],
                "maximumNodes": "",
                "metrics": [{
                    "maximumCapacity": "",
                    "name": "",
                    "reservationCapacity": "",
                    "totalApplicationCapacity": ""
                }],
                "minimumNodes": "",
                "parameters": {},
                "removeApplicationCapacity": "",
                "typeName": "",
                "typeVersion": "",
                "upgradePolicy": {
                    "applicationHealthPolicy": {
                        "considerWarningAsError": "",
                        "defaultServiceTypeHealthPolicy": {
                            "maxPercentUnhealthyPartitionsPerService": "",
                            "maxPercentUnhealthyReplicasPerPartition": "",
                            "maxPercentUnhealthyServices": ""
                        },
                        "maxPercentUnhealthyDeployedApplications": "",
                        "serviceTypeHealthPolicyMap": {}
                    },
                    "forceRestart": "",
                    "recreateApplication": "",
                    "rollingUpgradeMonitoringPolicy": {
                        "failureAction": "",
                        "healthCheckRetryTimeout": "",
                        "healthCheckStableDuration": "",
                        "healthCheckWaitDuration": "",
                        "upgradeDomainTimeout": "",
                        "upgradeTimeout": ""
                    },
                    "upgradeMode": "",
                    "upgradeReplicaSetCheckTimeout": ""
                }
            }]
        }
    }
}
