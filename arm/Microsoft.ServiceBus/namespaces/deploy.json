{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceBusNamespaceName": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 50,
            "metadata": {
                "description": "Optional. Name of the Service Bus Namespace. If no name is provided, then unique name will be created."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Optional. Location for all resources."
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "Required. Name of this SKU. - Basic, Standard, Premium"
            }
        },
        "zoneRedundant": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Optional. Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones."
            }
        },
        "partnerNamespaceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. ARM Id of the Primary/Secondary Service Bus namespace name, which is part of GEO DR pairing"
            }
        },
        "namespaceAlias": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. The Disaster Recovery configuration name"
            }
        },
        "authorizationRules": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "RootManageSharedAccessKey",
                    "properties": {
                        "rights": [
                            "Listen",
                            "Manage",
                            "Send"
                        ]
                    }
                }
            ],
            "metadata": {
                "description": "Optional. Authorization Rules for the Service Bus namespace"
            }
        },
        "ipFilterRules": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "Optional. IP Filter Rules for the Service Bus namespace"
            }
        },
        "targetNamespace": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Existing premium Namespace ARM Id name which has no entities, will be used for migration."
            }
        },
        "postMigrationName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Name to access Standard Namespace after migration."
            }
        },
        "virtualNetworkRuleSubnetIds": {
            "type": "array",
            "defaultValue": [
            ],
            "metadata": {
                "description": "Optional. vNet Rules SubnetIds for the Service Bus namespace."
            }
        },
        "diagnosticLogsRetentionInDays": {
            "type": "int",
            "defaultValue": 365,
            "minValue": 0,
            "maxValue": 365,
            "metadata": {
                "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
            }
        },
        "diagnosticStorageAccountId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Resource identifier of the Diagnostic Storage Account."
            }
        },
        "workspaceId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Resource identifier of Log Analytics."
            }
        },
        "eventHubAuthorizationRuleId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Resource ID of the event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
            }
        },
        "eventHubName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Name of the event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
            }
        },
        "lockForDeletion": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Optional. Flag indicating if resource is locked for deletion."
            }
        },
        "roleAssignments": {
            "defaultValue": [
            ],
            "type": "array",
            "metadata": {
                "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
            }
        },
        "privateEndpoints": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Optional. Configuration Details for private endpoints."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {
            },
            "metadata": {
                "description": "Optional. Tags of the resource."
            }
        },
        "cuaId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Customer Usage Attribution id (GUID). This GUID must be previously registered"
            }
        },
        "baseTime": {
            "type": "string",
            "defaultValue": "[utcNow('u')]",
            "metadata": {
                "description": "Generated. Do not provide a value! This date value is used to generate a SAS token to access the modules."
            }
        }
    },
    "variables": {
        "moduleName": "Service Bus Namespace",
        "maxNameLength": 50,
        "uniqueServiceBusNamespaceNameUntrim": "[uniqueString(concat(variables('moduleName'),parameters('baseTime')))]",
        "uniqueServiceBusNamespaceName": "[if(greater(length(variables('uniqueServiceBusNamespaceNameUntrim')),variables('maxNameLength')),substring(variables('uniqueServiceBusNamespaceNameUntrim'),0,variables('maxNameLength')),variables('uniqueServiceBusNamespaceNameUntrim'))]",
        "serviceBusNamespaceName": "[if(empty(parameters('serviceBusNamespaceName')),variables('uniqueServiceBusNamespaceName'),parameters('serviceBusNamespaceName'))]",
        "namespaceResourceId": "[resourceId('Microsoft.ServiceBus/Namespaces', variables('serviceBusNamespaceName'))]",
        "defaultAuthorizationRuleId": "[resourceId('Microsoft.ServiceBus/namespaces/AuthorizationRules', variables('serviceBusNamespaceName'), 'RootManageSharedAccessKey')]",
        "namespaceAlias": "[if(empty(parameters('namespaceAlias')), 'placeholder', parameters('namespaceAlias'))]",
        "diagnosticsMetrics": [
            {
                "category": "AllMetrics",
                "timeGrain": null,
                "enabled": true,
                "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                }
            }
        ],
        "diagnosticsLogs": [
            {
                "category": "OperationalLogs",
                "enabled": true,
                "retentionPolicy": {
                    "days": "[parameters('diagnosticLogsRetentionInDays')]",
                    "enabled": true
                }
            }
        ],
        "builtInRoleNames": {
            "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
            "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','b24988ac-6180-42a0-ab88-20f7382dd24c')]",
            "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
            "Azure Service Bus Data Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','090c5cfd-751d-490a-894a-3ce6f1109419')]",
            "Azure Service Bus Data Receiver": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','4f6d3b9b-027b-4f4c-9142-0e5a2a2247e0')]",
            "Azure Service Bus Data Sender": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','69a216fc-b8fb-44d8-bc22-1f3c2cd27a39')]",
            "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
            "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','73c42c96-874c-492b-b04d-ab87d138a893')]",
            "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','641177b8-a67a-45b9-a033-47bc880bb21e')]",
            "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
            "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
            "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
            "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','3913510d-42f4-4e42-8a64-420c390055eb')]",
            "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
            "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','36243c78-bf99-498c-9df9-86d9f8d28608')]",
            "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions','18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
        }
    },
    "resources": [
        {
            "condition": "[not(empty(parameters('cuaId')))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-01-01",
            "name": "[concat('pid-', parameters('cuaId'))]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                    ]
                }
            }
        },
        {
            "name": "[variables('serviceBusNamespaceName')]",
            "type": "Microsoft.ServiceBus/namespaces",
            "apiVersion": "2018-01-01-preview",
            "location": "[parameters('location')]",
            "tags": "[if(empty(parameters('tags')), json('null'), parameters('tags'))]",
            "sku": {
                "name": "[parameters('skuName')]"
            },
            "properties": {
                "zoneRedundant": "[parameters('zoneRedundant')]"
            },
            "resources": [
                {
                    "type": "providers/locks",
                    "apiVersion": "2016-09-01",
                    "condition": "[parameters('lockForDeletion')]",
                    "name": "Microsoft.Authorization/serviceBusNamespaceDoNotDelete",
                    "dependsOn": [
                        "[resourceId('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "comments": "Resource lock on the Azure Service Bus Namespace",
                    "properties": {
                        "level": "CannotDelete"
                    }
                },
                {
                    "type": "Microsoft.ServiceBus/namespaces/providers/diagnosticsettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat(variables('serviceBusNamespaceName'), '/Microsoft.Insights/service')]",
                    "condition": "[or(not(empty(parameters('diagnosticStorageAccountId'))),not(empty(parameters('workspaceId'))))]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "storageAccountId": "[if(empty(parameters('diagnosticStorageAccountId')), json('null'), parameters('diagnosticStorageAccountId'))]",
                        "workspaceId": "[if(empty(parameters('workspaceId')), json('null'), parameters('workspaceId'))]",
                        "eventHubAuthorizationRuleId": "[if(empty(parameters('eventHubAuthorizationRuleId')), json('null'), parameters('eventHubAuthorizationRuleId'))]",
                        "eventHubName": "[if(empty(parameters('eventHubName')), json('null'), parameters('eventHubName'))]",
                        "metrics": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId'))), json('null'), variables('diagnosticsMetrics'))]",
                        "logs": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId'))), json('null'), variables('diagnosticsLogs'))]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('serviceBusNamespaceName'), '/', variables('namespaceAlias'))]",
            "location": "[parameters('location')]",
            "condition": "[if(and(not(empty(parameters('partnerNamespaceId'))),not(empty(parameters('namespaceAlias')))), bool('true') , bool('false'))]",
            "dependsOn": [
                "[variables('namespaceResourceId')]"
            ],
            "properties": {
                "partnerNamespace": "[parameters('partnerNamespaceId')]"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('serviceBusNamespaceName'),'/', parameters('authorizationRules')[copyIndex()].name)]",
            "condition": "[greater(length(parameters('authorizationRules')),0)]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('namespaceResourceId')]"
            ],
            "copy": {
                "name": "authorizationRules",
                "count": "[length(parameters('authorizationRules'))]"
            },
            "properties": {
                "rights": "[parameters('authorizationRules')[copyIndex()].properties.rights]"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/ipFilterRules",
            "apiVersion": "2018-01-01-preview",
            "name": "[concat(variables('serviceBusNamespaceName'),'/', if(empty(parameters('ipFilterRules')), concat(variables('serviceBusNamespaceName'),'-ifr'), parameters('ipFilterRules')[copyIndex()].filterName))]",
            "condition": "[greater(length(parameters('ipFilterRules')),0)]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('namespaceResourceId')]"
            ],
            "copy": {
                "name": "ipFilterRules",
                "count": "[length(parameters('ipFilterRules'))]"
            },
            "properties": "[parameters('ipFilterRules')[copyIndex()]]"
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/migrationConfigurations",
            "apiVersion": "2017-04-01",
            "name": "[concat(variables('serviceBusNamespaceName'),'/', '$default')]",
            "condition": "[not(empty(parameters('targetNamespace')))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('namespaceResourceId')]"
            ],
            "properties": {
                "targetNamespace": "[parameters('targetNamespace')]",
                "postMigrationName": "[parameters('postMigrationName')]"
            }
        },
        {
            "type": "Microsoft.ServiceBus/namespaces/virtualNetworkRules",
            "apiVersion": "2018-01-01-preview",
            "name": "[concat(variables('serviceBusNamespaceName'),'/',if(empty(parameters('virtualNetworkRuleSubnetIds')), concat(variables('serviceBusNamespaceName'),'-vnr'), split(parameters('virtualNetworkRuleSubnetIds')[copyIndex()], '/')[10]))]",
            "condition": "[greater(length(parameters('virtualNetworkRuleSubnetIds')),0)]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('namespaceResourceId')]"
            ],
            "copy": {
                "name": "virtualNetworkRuleSubnetIds",
                "count": "[length(parameters('virtualNetworkRuleSubnetIds'))]"
            },
            "properties": {
                "virtualNetworkSubnetId": "[parameters('virtualNetworkRuleSubnetIds')[copyIndex()]]"
            }
        },
        // Private Endpoints
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-01-01",
            "name": "[concat(uniqueString(deployment().name, parameters('location')), '-ServiceBusNamespaces-PrivateEndpoints','-',copyIndex())]",
            "condition": "[not(empty(parameters('privateEndpoints')))]",
            "dependsOn": [
                "[variables('serviceBusNamespaceName')]"
            ],
            "copy": {
                "name": "privateEndpointsCopy",
                "count": "[length(parameters('privateEndpoints'))]"
            },
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "privateEndpointResourceId": {
                        "value": "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
                    },
                    "privateEndpointVnetLocation": {
                        "value": "[if(empty(parameters('privateEndpoints')),'dummy',reference(split(parameters('privateEndpoints')[copyIndex()].subnetResourceId,'/subnets/')[0],'2020-06-01', 'Full').location)]"
                    },
                    "privateEndpoint": {
                        "value": "[parameters('privateEndpoints')[copyIndex()]]"
                    },
                    "tags": {
                        "value": "[parameters('tags')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "privateEndpointResourceId": {
                            "type": "string"
                        },
                        "privateEndpointVnetLocation": {
                            "type": "string"
                        },
                        "privateEndpoint": {
                            "type": "object"
                        },
                        "tags": {
                            "type": "object"
                        }
                    },
                    "variables": {
                        "privateEndpointResourceName": "[last(split(parameters('privateEndpointResourceId'),'/'))]",
                        "privateEndpoint": {
                            "name": "[if(contains(parameters('privateEndpoint'), 'name'),if(empty(parameters('privateEndpoint').name),concat(variables('privateEndpointResourceName'),'-',parameters('privateEndpoint').service),parameters('privateEndpoint').name),concat(variables('privateEndpointResourceName'),'-',parameters('privateEndpoint').service))]",
                            "subnetResourceId": "[parameters('privateEndpoint').subnetResourceId]",
                            "service": [
                                "[parameters('privateEndpoint').service]"
                            ],
                            "privateDnsZoneResourceIds": "[if(contains(parameters('privateEndpoint'), 'privateDnsZoneResourceIds'),if(empty(parameters('privateEndpoint').privateDnsZoneResourceIds),createArray(),parameters('privateEndpoint').privateDnsZoneResourceIds),createArray())]",
                            "customDnsConfigs": "[if(contains(parameters('privateEndpoint'), 'customDnsConfigs'),if(empty(parameters('privateEndpoint').customDnsConfigs),json('null'),parameters('privateEndpoint').customDnsConfigs),json('null'))]"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Network/privateEndpoints",
                            "apiVersion": "2020-05-01",
                            "name": "[variables('privateEndpoint').name]",
                            "location": "[parameters('privateEndpointVnetLocation')]",
                            "tags": "[parameters('tags')]",
                            "properties": {
                                "privateLinkServiceConnections": [
                                    {
                                        "name": "[variables('privateEndpoint').name]",
                                        "properties": {
                                            "privateLinkServiceId": "[parameters('privateEndpointResourceId')]",
                                            "groupIds": "[variables('privateEndpoint').service]"
                                        }
                                    }
                                ],
                                "manualPrivateLinkServiceConnections": [],
                                "subnet": {
                                    "id": "[variables('privateEndpoint').subnetResourceId]"
                                },
                                "customDnsConfigs": "[variables('privateEndpoint').customDnsConfigs]"
                            }
                        },
                        {
                            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                            "apiVersion": "2020-05-01",
                            "condition": "[not(empty(variables('privateEndpoint').privateDnsZoneResourceIds))]",
                            "name": "[concat(variables('privateEndpoint').name, '/default')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpoint').name)]"
                            ],
                            "properties": {
                                "copy": [
                                    {
                                        "name": "privateDnsZoneConfigs",
                                        "count": "[length(variables('privateEndpoint').privateDnsZoneResourceIds)]",
                                        "input": {
                                            "name": "[last(split(variables('privateEndpoint').privateDnsZoneResourceIds[copyIndex('privateDnsZoneConfigs')],'/'))]",
                                            "properties": {
                                                "privateDnsZoneId": "[variables('privateEndpoint').privateDnsZoneResourceIds[copyIndex('privateDnsZoneConfigs')]]"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat('rbac-',deployment().name, copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-01-01",
            "condition": "[not(empty(parameters('roleAssignments')))]",
            "dependsOn": [
                "[variables('serviceBusNamespaceName')]"
            ],
            "copy": {
                "name": "rbacDeplCopy",
                "count": "[length(parameters('roleAssignments'))]"
            },
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "roleAssignment": {
                        "value": "[parameters('roleAssignments')[copyIndex()]]"
                    },
                    "builtInRoleNames": {
                        "value": "[variables('builtInRoleNames')]"
                    },
                    "namespaceName": {
                        "value": "[variables('serviceBusNamespaceName')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "roleAssignment": {
                            "type": "object"
                        },
                        "builtInRoleNames": {
                            "type": "object"
                        },
                        "namespaceName": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.ServiceBus/namespaces/providers/roleAssignments",
                            "apiVersion": "2018-09-01-preview",
                            "name": "[concat(parameters('namespaceName'), '/Microsoft.Authorization/', guid(uniqueString(concat(parameters('namespaceName'), array(parameters('roleAssignment').principalIds)[copyIndex('innerRbacCopy')], parameters('roleAssignment').roleDefinitionIdOrName ) )))]",
                            "dependsOn": [
                            ],
                            "copy": {
                                "name": "innerRbacCopy",
                                "count": "[length(parameters('roleAssignment').principalIds)]"
                            },
                            "properties": {
                                "roleDefinitionId": "[if(contains(parameters('builtInRoleNames'), parameters('roleAssignment').roleDefinitionIdOrName ), parameters('builtInRoleNames')[parameters('roleAssignment').roleDefinitionIdOrName] , parameters('roleAssignment').roleDefinitionIdOrName )]",
                                "principalId": "[array(parameters('roleAssignment').principalIds)[copyIndex()]]"
                            }
                        }
                    ]
                }
            }
        }
    ],
    "functions": [
    ],
    "outputs": {
        "serviceBusNamespaceResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]",
            "metadata": {
                "description": "The Resource Id of the Service Bus Namespace."
            }
        },
        "serviceBusNamespaceResourceGroup": {
            "type": "string",
            "value": "[resourceGroup().name]",
            "metadata": {
                "description": "The name of the Resource Group the Service Bus Namespace was created in."
            }
        },
        "serviceBusNamespaceName": {
            "type": "string",
            "value": "[variables('serviceBusNamespaceName')]",
            "metadata": {
                "description": "The Name of the Service Bus Namespace."
            }
        },
        "defaultAuthorizationRuleId": {
            "type": "string",
            "value": "[variables('defaultAuthorizationRuleId')]",
            "metadata": {
                "description": "The Id of the authorization rule marked by the variable with the same name."
            }
        },
        "serviceBusConnectionString": {
            "type": "string",
            "value": "[concat('Endpoint=sb://', variables('serviceBusNamespaceName'), '.servicebus.windows.net/;SharedAccessKeyName=',listkeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceName'), 'RootManageSharedAccessKey'), '2017-04-01').primaryKey)]",
            "metadata": {
                "description": "The Service Bus Namespace connection string."
            }
        }
    }
}